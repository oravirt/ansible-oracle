---
- name: Opatch-upgrade | Check current opatch version
  opitzconsulting.ansible_oracle.oracle_opatch:
    oracle_home: "{{ oracle_home_gi }}"
    state: opatchversion
  register: current_opatch_version
  tags: current_opatch_version
  when: gi_patches is defined and gi_patches[oracle_install_version_gi] is defined and gi_patches[oracle_install_version_gi]['opatch_minversion'] is defined
  become: true

- name: Opatch-upgrade | Info
  ansible.builtin.debug:  # noqa name[missing]
    msg:
      - "current: {{ current_opatch_version.msg }}"
      - "needed:  {{ gi_patches[oracle_install_version_gi]['opatch_minversion'] }}"
  tags: current_opatch_version
  when:
    - gi_patches is defined
    - gi_patches[oracle_install_version_gi] is defined
    - gi_patches[oracle_install_version_gi]['opatch_minversion'] is defined

- name: Opatch-upgrade | Extract OPatch to GI Home
  ansible.builtin.unarchive:
    src: "{{ oracle_stage }}/{{ item.filename }}"
    dest: "{{ oracle_home_gi }}"
    copy: false
    owner: "{{ _grid_install_user }}"
    group: "{{ oracle_group }}"
  become: true
  with_items: "{{ oracle_opatch_patch | selectattr('version', 'equalto', oracle_install_version_gi) }}"
  when:
    - apply_patches_gi
    - oracle_sw_copy
    - gi_patches is defined
    - gi_patches[oracle_install_version_gi] is defined
    - gi_patches[oracle_install_version_gi]['opatch_minversion'] is defined
    - (current_opatch_version.msg is version_compare(gi_patches[oracle_install_version_gi]['opatch_minversion'], '<'))
  tags:
    - oragridpatchunpack

- name: Opatch-upgrade | Extract OPatch to GI Home (from remote location)
  ansible.builtin.unarchive:
    src: "{{ oracle_stage_remote }}/{{ item.filename }}"
    dest: "{{ oracle_home_gi }}"
    copy: false
    owner: "{{ _grid_install_user }}"
    group: "{{ oracle_group }}"
  become: true
  with_items: "{{ oracle_opatch_patch | selectattr('version', 'equalto', oracle_install_version_gi) }}"
  when:
    - apply_patches_gi
    - item.version == oracle_install_version_gi
    - not oracle_sw_copy
    - gi_patches is defined
    - gi_patches[oracle_install_version_gi] is defined
    - gi_patches[oracle_install_version_gi]['opatch_minversion'] is defined
    - (current_opatch_version.msg is version_compare(gi_patches[oracle_install_version_gi]['opatch_minversion'], '<'))
  tags:
    - oragridpatchunpack

- name: Opatch-upgrade | Check current opatch version
  opitzconsulting.ansible_oracle.oracle_opatch:
    oracle_home: "{{ oracle_home_gi }}"
    state: opatchversion
  register: current_opatch_version
  tags: current_opatch_version
  when:
    - gi_patches is defined
    - gi_patches[oracle_install_version_gi] is defined
    - gi_patches[oracle_install_version_gi]['opatch_minversion'] is defined
  become: true
  become_user: "{{ _grid_install_user }}"

- name: Opatch-upgrade | Info
  ansible.builtin.debug:
    var: current_opatch_version.msg
  tags: current_opatch_version
  when: current_opatch_version.changed  # noqa: no-handler
