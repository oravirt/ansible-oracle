---

- name: gi_opatch | Extract GI psu files to patch base
  ansible.builtin.unarchive:
    src: "{{ oracle_stage }}/{{ item[0].filename }}"
    dest: "{{ oracle_patch_stage }}/{{ oracle_install_version_gi }}"
    creates: "{{ oracle_patch_stage }}/{{ oracle_install_version_gi }}/{{ item[0].creates | default(omit) }}"
    copy: false
  become: true
  become_user: "{{ _grid_install_user }}"
  with_nested:
    - "{{ oracle_sw_patches }}"
    - "{{ gi_patches[oracle_install_version_gi]['opatchauto'] }}"
  when:
    - apply_patches_gi
    - item[1].patchid == item[0].patchid
    - item[1].state == 'present'
    - oracle_sw_copy
    - oracle_sw_unpack
    - gi_patches[oracle_install_version_gi]['opatchauto'] is defined
  tags:
    - oragridpsuunpack1

- name: gi_opatch | Extract GI psu files to patch base (from remote location)
  ansible.builtin.unarchive:
    src: "{{ oracle_stage_remote }}/{{ item.0.filename }}"
    dest: "{{ oracle_patch_stage }}/{{ oracle_install_version_gi }}"
    creates: "{{ oracle_patch_stage }}/{{ oracle_install_version_gi }}/{{ item[0].creates | default(omit) }}"
    copy: false
  become: true
  become_user: "{{ _grid_install_user }}"
  with_nested:
    - "{{ oracle_sw_patches }}"
    - "{{ gi_patches[oracle_install_version_gi]['opatchauto'] }}"
  when:
    - apply_patches_gi
    - item[1].patchid == item[0].patchid
    - item[1].state == 'present'
    - not oracle_sw_copy
    - oracle_sw_unpack
    - gi_patches[oracle_install_version_gi]['opatchauto'] is defined
  tags:
    - oragridpsuunpack2
