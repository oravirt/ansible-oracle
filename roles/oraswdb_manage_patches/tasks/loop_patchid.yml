---
- name: Work on Patch {{ dhc_opatch.patchid }}
  ansible.builtin.debug:
    msg:
      - >-
          name: {{ dbh.home }}
          home: {{ db_homes_config[dbh.home]['oracle_home'] | default('') }}
      - >-
          patchid: {{ dhc_opatch.patchid }}
          state: {{ dhc_opatch.state }}
      - >-
          stop_processes: {{ dhc_opatch.stop_processes | default('') }}
          opatch os user: {{ __opatchauto_patchtype | ternary('root', oracle_user) }}
          opatchauto: {{ __opatchauto_patchtype }}
      - >-
          excludeUPI: {{ dhc_opatch.excludeUPI | default('') }}
          patchsubdir: {{ __oraswdb_manage_patches_patchsubdir | default('') }}

- name: Work on oracle_sw_patches
  ansible.builtin.include_tasks: loop_opatch_apply.yml
  vars:
    __sw_patches_filename_creates: "{{ osp_loop.creates | default((dhc_opatch.patchid | string) + '/README.txt') }}"
    __patch_unarchive_dir: "{{ oracle_patch_stage }}/{{ db_version }}/{{ __patch_upisubdir }}/"
    __patch_upisubdir: >-
      {%- if osp_loop.unique_patchid is defined -%}
      upi_{{ osp_loop.unique_patchid -}}/{% endif -%}
  with_items:
    - "{{ oracle_sw_patches | selectattr('patchid', 'equalto', dhc_opatch.patchid) }}"
  loop_control:
    loop_var: osp_loop
    label: >-
      patchid: {{ osp_loop.patchid }}
      filename: {{ osp_loop.filename }}
      unique_patchid: {{ osp_loop.unique_patchid | default('') }}
  when:
    - apply_patches_db
    - dhc_opatch.state == 'present'
    - not dbhome_patches.stdout_lines | select('match', osp_loop.patchid | string) | length > 0
    - osp_loop.unique_patchid | default(0) == dhc_opatch.excludeUPI | default(0)

- name: Info
  ansible.builtin.debug:
    msg: Starting opatch apply. This could take some time to complete...

# opatchauto needs root user for execution
- name: Manage patch for DB
  opitzconsulting.ansible_oracle.oracle_opatch:
    oracle_home: "{{ oracle_home_db }}"
    patch_base: >-
      {{ oracle_patch_install }}/{{ db_version }}/{{ dhc_opatch.path | default(__patch_upisubdir + (dhc_opatch.patchid | string)) }}
    patch_id: "{{ dhc_opatch.patchid }}"
    patch_version: "{{ dhc_opatch.patchversion | default(omit) }}"
    exclude_upi: "{{ dhc_opatch.excludeUPI | default(omit) }}"
    opatchauto: "{{ __opatchauto_patchtype }}"
    conflict_check: true
    stop_processes: "{{ dhc_opatch.stop_processes | default(False) }}"
    ocm_response_file: "{{ ocm_response_file | default(omit) }}"
    output: verbose
    state: "{{ dhc_opatch.state }}"
  become: true
  become_user: "{{ __opatchauto_patchtype | ternary('root', oracle_user) }}"
  vars:
    __patch_upisubdir: >-
      {%- if dhc_opatch.excludeUPI is defined -%}
      upi_{{ dhc_opatch.excludeUPI -}}/{% endif -%}
