---
- name: db_opatch | Copy oracle DB patch (opatchauto) to server (www)
  ansible.builtin.get_url:
    url: "{{ oracle_sw_source_www }}/{{ item[0].filename }}"
    dest: "{{ oracle_stage }}"
    mode: "0775"
  with_nested:
    - "{{ oracle_sw_patches }}"
    - "{{ db_homes_config[dbh.home]['opatchauto'] }}"
  when: apply_patches_db and item[1].patchid == item[0].patchid and item[1].apply and oracle_sw_copy and not is_sw_source_local
  become: true
  become_user: "{{ oracle_user }}"
  tags:
    - oragridpatchget

- name: db_opatch | Copy oracle DB patch (opatchauto) to server (local)
  ansible.builtin.copy:
    src: "{{ oracle_sw_source_local }}/{{ item[0].filename }}"
    dest: "{{ oracle_stage }}"
    mode: "0775"
    force: false
  with_nested:
    - "{{ oracle_sw_patches }}"
    - "{{ db_homes_config[dbh.home]['opatchauto'] }}"
  when: apply_patches_db and item[1].patchid == item[0].patchid and item[1].apply and oracle_sw_copy and is_sw_source_local
  become: true
  become_user: "{{ oracle_user }}"
  tags:
    - oragridpatchpush

- name: db_opatch | Copy oracle DB patch (opatch) to server (www)
  ansible.builtin.get_url:
    url: "{{ oracle_sw_source_www }}/{{ item[0].filename }}"
    dest: "{{ oracle_stage }}/{{ item[0].filename }}"
    mode: "0775"
  with_nested:
    - "{{ oracle_sw_patches }}"
    - "{{ db_homes_config[dbh.home]['opatch'] }}"
  when:
    - apply_patches_db
    - item[1].patchid == item[0].patchid
    - ( item[0].upi is not defined or item[1].upi is not defined or item[0].upi == item[1].upi )
    - item[1].state == "present"
    - oracle_sw_copy and not is_sw_source_local
  become: true
  become_user: "{{ oracle_user }}"
  tags:
    - oragridpatchget

- name: db_opatch | Copy oracle DB patch (opatch) to server (local)
  ansible.builtin.copy:
    src: "{{ oracle_sw_source_local }}/{{ item[0].filename }}"
    dest: "{{ oracle_stage }}/{{ item[0].filename }}"
    mode: "0775"
    force: false
  with_nested:
    - "{{ oracle_sw_patches }}"
    - "{{ db_homes_config[dbh.home]['opatch'] }}"
  when:
    - apply_patches_db
    - item[1].patchid == item[0].patchid
    - ( item[0].upi is not defined or item[1].upi is not defined or item[0].upi == item[1].upi )
    - item[1].state == "present"
    - oracle_sw_copy and is_sw_source_local
  become: true
  become_user: "{{ oracle_user }}"
  tags:
    - oragridpatchpush

- name: db_opatch | Copy oracle opatch to server (www)
  ansible.builtin.get_url:
    url: "{{ oracle_sw_source_www }}/{{ item.filename }}"
    dest: "{{ oracle_stage }}"
    mode: "0775"
    force: true
  with_items: "{{ oracle_opatch_patch }}"
  when: apply_patches_db and item.version == db_version and oracle_sw_copy and not is_sw_source_local
  become: true
  become_user: "{{ oracle_user }}"
  tags:
    - oragridopatchget

- name: db_opatch | Copy oracle opatch to server (local)
  ansible.builtin.copy:
    src: "{{ oracle_sw_source_local }}/{{ item.filename }}"
    dest: "{{ oracle_stage }}"
    mode: "0775"
    force: true
  with_items: "{{ oracle_opatch_patch }}"
  when: apply_patches_db and item.version == db_version and oracle_sw_copy and is_sw_source_local
  become: true
  become_user: "{{ oracle_user }}"
  tags:
    - oragridpatchpush
