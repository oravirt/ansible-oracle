---
- name: Manage users (db/cdb)
  opitzconsulting.ansible_oracle.oracle_user:
    hostname: "{{ ansible_hostname }}"
    port: "{{ _listener_port_cdb }}"
    service_name: "{{ _db_service_name }}"
    user: "{{ db_user }}"
    password: "{{ _db_password_cdb }}"
    mode: "{{ db_mode }}"
    schema: "{{ odb.1.schema }}"
    schema_password: "{{ odb.1.password_is_hash | default(false) | ternary(omit, __user_cdb_password) }}"
    schema_password_hash: "{{ odb.1.password_is_hash | default(false) | ternary(__user_cdb_password, omit) }}"
    profile: "{{ odb.1.profile | default(omit) }}"
    state: "{{ odb.1.state }}"
    default_tablespace: "{{ odb.1.default_tablespace | default(omit) }}"
    default_temp_tablespace: "{{ odb.1.default_temp_tablespace | default(omit) }}"
    container: "{{ odb.1.container | default(omit) }}"
    container_data: "{{ odb.1.container_data | default(omit) }}"
    update_password: "{{ odb.1.update_password | default(omit) }}"
    authentication_type: "{{ odb.1.authentication_type | default(omit) }}"
    grants: "{{ odb.1.grants | default(omit) }}"
  with_subelements:
    - "{{ oracle_databases }}"
    - users
    - flags:
      skip_missing: true
  environment: "{{ _oracle_env }}"
  when:
    - oracle_databases is defined
    - odb.0.state == 'present'
    - odb.1 is defined
  run_once: "{{ _oraswgi_meta_configure_cluster }}"
  become_user: "{{ oracle_user }}"
  loop_control:
    loop_var: odb
    label: >-
      service: {{ _db_service_name }}:{{ _listener_port_cdb }}
      schema: {{ odb.1.schema }}
      state: {{ odb.1.state }}
  tags: users
  vars:
    __user_cdb_password: >-
      {{ dbpasswords[odb.0.oracle_db_name][odb.1.schema] | default(default_dbpass) }}

- name: Manage users (pdb)
  opitzconsulting.ansible_oracle.oracle_user:
    hostname: "{{ ansible_hostname }}"
    port: "{{ _listener_port_pdb }}"
    service_name: "{{ _db_service_pdb }}"
    user: "{{ db_user }}"
    password: "{{ _db_password_pdb }}"
    mode: "{{ db_mode }}"
    schema: "{{ opdb.1.schema }}"
    schema_password: "{{ opdb.1.password_is_hash | default(false) | ternary(omit, __user_pdb_password) }}"
    schema_password_hash: "{{ opdb.1.password_is_hash | default(false) | ternary(__user_pdb_password, omit) }}"
    profile: "{{ opdb.1.profile | default(omit) }}"
    state: "{{ opdb.1.state }}"
    default_tablespace: "{{ opdb.1.default_tablespace | default(omit) }}"
    default_temp_tablespace: "{{ opdb.1.default_temp_tablespace | default(omit) }}"
    update_password: "{{ opdb.1.update_password | default(omit) }}"
    authentication_type: "{{ opdb.1.authentication_type | default(omit) }}"
    grants: "{{ opdb.1.grants | default(omit) }}"
  with_subelements:
    - "{{ oracle_pdbs }}"
    - users
    - flags:
      skip_missing: true
  environment: "{{ _oracle_env_pdb }}"
  when:
    - oracle_pdbs is defined
    - opdb.0.state == 'present'
    - opdb.1 is defined
    - opdb.1.schema is defined
    - opdb.1.state is defined
  run_once: "{{ _oraswgi_meta_configure_cluster }}"
  become_user: "{{ oracle_user }}"
  loop_control:
    label: >-
      service: {{ _db_service_pdb }}
      schema: {{ opdb.1.schema }}
      state: {{ opdb.1.state }}
    loop_var: opdb
  tags: users
  vars:
    __user_pdb_password: >-
      {{ dbpasswords[opdb.0.cdb][opdb.0.pdb_name][opdb.1.schema] | default(default_dbpass) }}
