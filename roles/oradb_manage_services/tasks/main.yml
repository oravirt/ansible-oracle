---
- name: Create services (db/cdb)
  opitzconsulting.ansible_oracle.oracle_services:
    name: "{{ item.1.name }}"
    database_name: "{{ item.0.oracle_db_name }}"
    pi: "{{ item.1.pi | default(omit) }}"
    ai: "{{ item.1.ai | default(omit) }}"
    role: "{{ item.1.role | default(omit) }}"
    pdb: "{{ item.0.name | default(omit) }}"
    state: present
    host: "{{ ansible_hostname }}"
    port: "{{ listener_port_template }}"
    un: "{{ db_user }}"
    pw: "{{ db_password_cdb }}"
    sn: "{{ db_service_name }}"
  environment: "{{ oracle_env }}"
  run_once: "{{ configure_cluster }}"
  with_subelements:
    - "{{ oracle_databases }}"
    - services
    - flags:
      skip_missing: true
  when:
    - oracle_databases is defined
    - item.0.state | lower == 'present'
    - item.1 is defined
    - (item.1.state | upper == 'PRESENT' or item.1.state | upper == 'STARTED')
  become_user: "{{ oracle_user }}"
  tags: create_service,services

- name: Create services (pdb)
  opitzconsulting.ansible_oracle.oracle_services:
    name: "{{ item.1.name }}"
    database_name: "{{ item.0.cdb }}"
    pi: "{{ item.1.pi | default(omit) }}"
    ai: "{{ item.1.ai | default(omit) }}"
    pdb: "{{ item.0.pdb_name | default(omit) }}"
    role: "{{ item.1.role | default(omit) }}"
    state: present
    host: "{{ ansible_hostname }}"
    port: "{{ listener_port_template }}"
    un: "{{ db_user }}"
    pw: "{{ db_password_pdb }}"
    sn: "{{ item.0.pdb_name }}"
  environment: "{{ oracle_env }}"
  run_once: "{{ configure_cluster }}"
  with_subelements:
    - "{{ oracle_pdbs }}"
    - services
    - flags:
      skip_missing: true
  when:
    - oracle_pdbs is defined
    - item.0.state | lower == 'present'
    - item.1 is defined
    - (item.1.state | upper == 'PRESENT' or item.1.state|upper == 'STARTED')
  become_user: "{{ oracle_user }}"
  tags: create_service,services

- name: Start services (db/cdb)
  opitzconsulting.ansible_oracle.oracle_services:
    name: "{{ item.1.name }}"
    database_name: "{{ item.0.oracle_db_name }}"
    pdb: "{{ item.0.pdb_name | default(omit) }}"
    state: started
    host: "{{ ansible_hostname }}"
    port: "{{ listener_port_template }}"
    un: "{{ db_user }}"
    pw: "{{ db_password_cdb }}"
    sn: "{{ db_service_name }}"
  environment: "{{ oracle_env }}"
  run_once: "{{ configure_cluster }}"
  with_subelements:
    - "{{ oracle_databases }}"
    - services
    - flags:
      skip_missing: true
  when:
    - oracle_databases is defined
    - item.0.state | lower == 'present'
    - item.1 is defined
    - item.1.state | upper == 'STARTED'
  become_user: "{{ oracle_user }}"
  tags: start_service,services

- name: Start services (pdbs)
  opitzconsulting.ansible_oracle.oracle_services:
    name: "{{ item.1.name }}"
    database_name: "{{ item.0.cdb }}"
    pdb: "{{ item.0.pdb_name | default(omit) }}"
    state: started
    host: "{{ ansible_hostname }}"
    port: "{{ listener_port_template }}"
    un: "{{ db_user }}"
    pw: "{{ db_password_pdb }}"
    sn: "{{ item.0.pdb_name }}"
  environment: "{{ oracle_env }}"
  run_once: "{{ configure_cluster }}"
  with_subelements:
    - "{{ oracle_pdbs }}"
    - services
    - flags:
      skip_missing: true
  when:
    - oracle_pdbs is defined
    - item.0.state | lower == 'present'
    - item.1 is defined and item.1.state | upper == 'STARTED'
  become_user: "{{ oracle_user }}"
  tags: start_service,services

- name: Stop services (db/cdb)
  opitzconsulting.ansible_oracle.oracle_services:
    name: "{{ item.1.name }}"
    database_name: "{{ item.0.oracle_db_name }}"
    pdb: "{{ item.0.pdb_name | default(omit) }}"
    state: stopped
    host: "{{ ansible_hostname }}"
    port: "{{ listener_port_template }}"
    un: "{{ db_user }}"
    pw: "{{ db_password_cdb }}"
    sn: "{{ db_service_name }}"
  environment: "{{ oracle_env }}"
  run_once: "{{ configure_cluster }}"
  with_subelements:
    - "{{ oracle_databases }}"
    - services
    - flags:
      skip_missing: true
  when:
    - oracle_databases is defined
    - item.0.state | lower == 'present'
    - item.1 is defined and item.1.state | upper == 'STOPPED' or item.1.state | upper == 'ABSENT'
  become_user: "{{ oracle_user }}"
  tags: start_service,services

- name: Stop services (pdbs)
  opitzconsulting.ansible_oracle.oracle_services:
    name: "{{ item.1.name }}"
    database_name: "{{ item.0.cdb }}"
    pdb: "{{ item.0.pdb_name | default(omit) }}"
    state: stopped
    host: "{{ ansible_hostname }}"
    port: "{{ listener_port_template }}"
    un: "{{ db_user }}"
    pw: "{{ db_password_pdb }}"
    sn: "{{ item.0.pdb_name }}"
  environment: "{{ oracle_env }}"
  run_once: "{{ configure_cluster }}"
  with_subelements:
    - "{{ oracle_pdbs }}"
    - services
    - flags:
      skip_missing: true
  when:
    - oracle_pdbs is defined
    - item.0.state | lower == 'present'
    - item.1 is defined
    - item.1.state | upper == 'STOPPED' or item.1.state | upper == 'ABSENT'
  become_user: "{{ oracle_user }}"
  tags: start_service,services

- name: Remove services (db/cdb)
  opitzconsulting.ansible_oracle.oracle_services:
    name: "{{ item.1.name }}"
    database_name: "{{ item.0.oracle_db_name }}"
    pdb: "{{ item.0.pdb_name | default(omit) }}"
    state: absent
    host: "{{ ansible_hostname }}"
    port: "{{ listener_port_template }}"
    un: "{{ db_user }}"
    pw: "{{ db_password_cdb }}"
    sn: "{{ db_service_name }}"
  environment: "{{ oracle_env }}"
  run_once: "{{ configure_cluster }}"
  with_subelements:
    - "{{ oracle_databases }}"
    - services
    - flags:
      skip_missing: true
  when:
    - oracle_databases is defined
    - item.0.state | lower == 'present'
    - item.1 is defined
    - item.1.state | upper == 'ABSENT'
  become_user: "{{ oracle_user }}"
  tags: start_service,services

- name: Remove services (pdbs)
  opitzconsulting.ansible_oracle.oracle_services:
    name: "{{ item.1.name }}"
    database_name: "{{ item.0.cdb }}"
    pdb: "{{ item.0.pdb_name | default(omit) }}"
    state: absent
    host: "{{ ansible_hostname }}"
    port: "{{ listener_port_template }}"
    un: "{{ db_user }}"
    pw: "{{ db_password_pdb }}"
    sn: "{{ item.0.pdb_name }}"
  environment: "{{ oracle_env }}"
  run_once: "{{ configure_cluster }}"
  with_subelements:
    - "{{ oracle_pdbs }}"
    - services
    - flags:
      skip_missing: true
  when:
    - oracle_pdbs is defined
    - item.0.state | lower == 'present'
    - item.1 is defined
    - item.1.state | upper == 'ABSENT'
  become_user: "{{ oracle_user }}"
  tags: start_service,services
