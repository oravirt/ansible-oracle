---
- name: oradb_datapatch | Start listener
  ansible.builtin.shell: "export PATH=${ORACLE_HOME}/bin:${PATH}; lsnrctl start {{ lsnrinst.listener_name }} /dev/null; exit 0"
  # noqa no-changed-when
  environment: "{{ oracle_env_lsnrctl }}"
  become: true
  become_user: "{{ oracle_user }}"
  with_items: "{{ listener_installed }}"
  loop_control:
    loop_var: lsnrinst
    label: >-
      LISTENER: {{ lsnrinst.listener_name }}
      ORACLE_HOME: {{ listener_home }}
  when:
    - listener_installed is defined
    - listener_installed | length > 0
    - lsnrinst.state | lower == 'present'

- name: oradb_datapatch | Start database
  opitzconsulting.ansible_oracle.oracle_db:
    oracle_home: "{{ _oracle_home_db }}"
    db_name: "{{ odb.oracle_db_name }}"
    db_unique_name: "{{ odb.oracle_db_unique_name | default(omit) }}"
    sid: "{{ odb.oracle_db_instance_name | default(omit) }}"
    state: started
  become: true
  become_user: "{{ oracle_user }}"
  with_items: "{{ oracle_databases | selectattr('state', 'match', 'present') }}"
  loop_control:
    loop_var: odb
    label: >-
      home: {{ odb.home }}
      db_name: {{ odb.oracle_db_name }}
  when:
    - oracle_databases is defined
    - oracle_databases | list | length > 0
  tags: startdb

# @todo bug: Do we really need db-connection here?
- name: oradb_datapatch | Run datapatch
  opitzconsulting.ansible_oracle.oracle_datapatch:
    oracle_home: "{{ _oracle_home_db }}"
    db_name: "{{ odb.0.oracle_db_name }}"
    db_unique_name: "{{ odb.0.oracle_db_unique_name | default(omit) }}"
    sid: "{{ odb.oracle_db_instance_name | default(omit) }}"
    output: verbose
    fail_on_db_not_exist: "{{ oradb_datapatch_fail_on_db_not_exist }}"
    user: sys
    password: "{{ _db_password_cdb }}"
    hostname: "{{ ansible_fqdn }}"
    service_name: "{{ _db_service_name }}"
    port: "{{ _listener_port_cdb }}"
  loop:
    - "{{ oracle_databases | selectattr('state', 'match', 'present') | flatten(levels=1) }}"
  become: true
  become_user: "{{ oracle_user }}"
  loop_control:
    loop_var: odb
    label: >-
      home: {{ odb.0.home | default('') }}
      db_name: {{ odb.0.oracle_db_name | default('') }}"
  when:
    - oracle_databases is defined
    - oracle_databases | list | length > 0
    - odb.0.state == 'present'
  tags: datapatch
