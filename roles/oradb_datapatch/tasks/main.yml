---
- name: oradb_datapatch | Start listener
  ansible.builtin.shell: "export PATH=${ORACLE_HOME}/bin:${PATH}; lsnrctl start {{ lsnrinst.listener_name }} /dev/null; exit 0"
  # noqa no-changed-when
  environment: "{{ oracle_env_lsnrctl }}"
  become_user: "{{ oracle_user }}"
  with_items: "{{ listener_installed }}"
  loop_control:
    loop_var: lsnrinst
    label: "LISTENER: {{ lsnrinst.listener_name }} ORACLE_HOME: {{ listener_home }}"
  when:
    - listener_installed is defined
    - lsnrinst.state | lower == 'present'

- name: oradb_datapatch | Start database
  opitzconsulting.ansible_oracle.oracle_db:
    oracle_home: "{{ oracle_db_home }}"
    db_name: "{{ item.oracle_db_name }}"
    db_unique_name: "{{ item.oracle_db_unique_name | default(omit) }}"
    sid: "{{ item.oracle_db_instance_name | default(omit) }}"
    state: started
  become_user: "{{ oracle_user }}"
  with_items: "{{ oracle_databases }}"
  loop_control:
    label: "home: {{ item.home }} db_name: {{ item.oracle_db_name }}"
  tags: startdb

- name: oradb_datapatch | Run datapatch
  opitzconsulting.ansible_oracle.oracle_datapatch:
    oracle_home: "{{ oracle_db_home }}"
    db_name: "{{ item.oracle_db_name }}"
    db_unique_name: "{{ item.oracle_db_unique_name | default(omit) }}"
    sid: "{{ item.oracle_db_instance_name | default(omit) }}"
    output: verbose
    fail_on_db_not_exist: "{{ fail_on_db_not_exist }}"
    user: "{{ db_user }}"
    password: "{{ db_password }}"
    hostname: "{{ ansible_fqdn }}"
    service_name: "{{ db_service_name }}"
    port: "{{ listener_port_template }}"
  with_items: "{{ oracle_databases }}"
  when: item.state | lower == 'present'
  become: true
  become_user: "{{ oracle_user }}"
  loop_control:
    label: "home: {{ item.home }} db_name: {{ item.oracle_db_name }}"
  tags: datapatch
