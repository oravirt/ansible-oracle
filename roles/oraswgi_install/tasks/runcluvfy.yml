---
- name: ""
  # need to run it once on cluster
  # => unzip was executed on 1st node only.
  # => hopefully the setup is the same on all nodes...
  run_once: "{{ configure_cluster }}"
  tags: runcluvfy
  block:

    - ansible.builtin.debug:  # noqa name[missing]
        msg: "install_home_gi | Sttart Execute runcluvfy.sh for Grid-Infrastructure"
      run_once: true
      when:
        - configure_cluster

    # GI < 19.11 + OL8 is not supported by Oracle!
    # ansible-oracle supports no preinstall patching at the moment
    # runcluvfy.sh is stuck during execution.
    # => Golden-Image with 19.11+ is mandatory for installation
    # => We do NOT look into the archive
    - name: assert that OL8 is using Golden-Image during unzip
      ansible.builtin.assert:
        that: oracle_install_image_gi is defined
      when:
        - ansible_os_family == 'RedHat'
        - ansible_distribution_major_version | int == 8
        - oracle_install_version_gi == "19.3.0.0"

    - name: install_home_gi | Execute runcluvfy.sh for Grid-Infrastructure
      ansible.builtin.command:
        argv:
          - "{{ oracle_home_gi }}/runcluvfy.sh"
          - stage
          - -pre
          - crsinst
          - -responseFile
          - "{{ oracle_rsp_stage }}/{{ oracle_grid_responsefile }}"
      register: cmdruncluvfygi
      failed_when: cmdruncluvfygi.rc == -1
      changed_when: cmdruncluvfygi.rc == 0
      become: true
      become_user: "{{ grid_install_user }}"
      run_once: true
      when:
        - configure_cluster

    - ansible.builtin.debug:  # noqa name[missing]
        var: cmdruncluvfygi.stdout_lines
      when: cmdruncluvfygi.stdout_lines is defined

    - name: install_home_gi | runcluvfy.sh failed
      ansible.builtin.fail:
        msg: "runcluvfy.sh failed - aborting Playbook rc={{ cmdruncluvfygi.rc }}"
      when:
        - cmdruncluvfygi.rc is defined
        - cmdruncluvfygi.rc != 0
        - not gi_ignoreprereq | bool

    - name: install_home_gi | Execute runcluvfy.sh for Oracle Restart
      ansible.builtin.command:
        argv:
          - "{{ oracle_home_gi }}/runcluvfy.sh"
          - comp
          - sys
          - -p
          - crs
          - -orainv
          - oinstall
      register: cmdruncluvfy
      failed_when: cmdruncluvfy.rc == -1
      changed_when: cmdruncluvfy.rc == 0
      become: true
      become_user: "{{ grid_install_user }}"
      when:
        - not configure_cluster

    - ansible.builtin.debug:  # noqa name[missing]
        var: cmdruncluvfy.stdout_lines
      when: cmdruncluvfy.stdout_lines is defined

    - name: install_home_gi | runcluvfy.sh failed
      ansible.builtin.fail:
        msg: "runcluvfy.sh failed - aborting Playbook rc={{ cmdruncluvfy.rc }}"
      when:
        - cmdruncluvfy.rc is defined
        - cmdruncluvfy.rc != 0
        - not gi_ignoreprereq | bool

    # Oracle GI/Restart: Configuration will fail when hostname points to localhost ip!
    - name: Check for hostname with localhost ip in hosts
      ansible.builtin.lineinfile:
        name: /etc/hosts
        regexp: "127.0.[0-1].1 .*{{ ansible_hostname }}.*"
        state: absent
      check_mode: true
      failed_when: etchosts.changed
      register: etchosts
