---
- name: ""
  # need to run it once on cluster
  # => unzip was executed on 1st node only.
  # => hopefully the setup is the same on all nodes...
  when:
    - _orasw_meta_primary_node | bool
  tags: runcluvfy
  block:

    - ansible.builtin.debug:  # noqa name[missing]
        msg: "runcluvfy | Start Execute runcluvfy.sh for Grid-Infrastructure"
      run_once: true
      when:
        - _oraswgi_meta_configure_cluster

    # # GI < 19.11 + OL8 is not supported by Oracle!
    # # ansible-oracle supports no preinstall patching at the moment
    # # runcluvfy.sh is stuck during execution.
    # # => Golden-Image with 19.11+ is mandatory for installation
    # # => We do NOT look into the archive
    # - name: assert that OL8 is using Golden-Image during unzip
    #   ansible.builtin.assert:
    #     that: oracle_install_image_gi is defined
    #   when:
    #     - ansible_os_family == 'RedHat'
    #     - ansible_distribution_major_version | int == 8
    #     - oracle_install_version_gi == "19.3.0.0"

    - name: runcluvfy | Execute cluvfy for Grid-Infrastructure
      ansible.builtin.import_role:
        name: oracluvfy
        tasks_from: execute_cluvfy.yml
      vars:
        cluvfy_args: >-
          stage -pre
          crsinst
          -responseFile {{ oracle_rsp_stage }}/{{ _oraswgi_install_oracle_grid_responsefile }}
      register: cmdruncluvfygi
      become: true
      become_user: "{{ _grid_install_user }}"
      environment: "{{ oracle_script_env }}"
      when:
        - _oraswgi_meta_configure_cluster
        - _orasw_meta_primary_node | bool
        - not gi_ignoreprereq | bool

    - name: runcluvfy | Execute cluvfy for Oracle Restart
      ansible.builtin.import_role:
        name: oracluvfy
        tasks_from: execute_cluvfy.yml
      vars:
        cluvfy_args: >-
          stage -pre hacfg
          -osdba {{ dba_group }}
          -osoper {{ oper_group }}
          -orainv oinstall
      register: cmdruncluvfy
      become: true
      become_user: "{{ _grid_install_user }}"
      environment: "{{ oracle_script_env }}"
      when:
        - not _oraswgi_meta_configure_cluster

    - ansible.builtin.debug:  # noqa name[missing]
        var: cmdruncluvfy.stdout_lines
      when: cmdruncluvfy.stdout_lines is defined

    - name: runcluvfy | cluvfy failed
      ansible.builtin.fail:
        msg: "cluvfy failed - aborting Playbook rc={{ cmdruncluvfy.rc }}"
      when:
        - cmdruncluvfy.rc is defined
        - cmdruncluvfy.rc != 0
        - not gi_ignoreprereq | bool

    # Oracle GI/Restart: Configuration will fail when hostname points to localhost ip!
    - name: runcluvfy | Check for hostname with localhost ip in hosts
      ansible.builtin.lineinfile:
        name: /etc/hosts
        regexp: "127.0.[0-1].1 .*{{ ansible_hostname }}.*"
        state: absent
      check_mode: true
      failed_when: etchosts.changed
      register: etchosts
