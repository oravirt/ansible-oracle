---
- name: Manage role grants (cdb)
  opitzconsulting.ansible_oracle.oracle_grants:
    role: "{{ odb.1.name }}"
    state: "{{ odb.1.state }}"
    grants: "{{ odb.1.grants | default(omit) }}"
    grants_mode: "{{ odb.1.grants_mode | default(omit) }}"
    object_privs: "{{ odb.1.object_privs | default(omit) }}"
    directory_privs: "{{ odb.1.directory_privs | default(omit) }}"
    hostname: "{{ oracle_hostname }}"
    port: "{{ _listener_port_cdb }}"
    service_name: "{{ _db_service_name }}"
    user: "{{ db_user }}"
    password: "{{ _db_password_cdb }}"
    container: "{{ odb.1.container | default(omit) }}"
    mode: "{{ db_mode }}"
  with_subelements:
    - "{{ oracle_databases }}"
    - roles
    - flags:
      skip_missing: true
  environment: "{{ _oracle_env_cdb }}"
  when:
    - oracle_databases is defined
    - odb.0.state == 'present'
    - (odb.1.grants is defined or odb.1.object_privs is defined)
  run_once: "{{ _oraswgi_meta_configure_cluster }}"
  become: true
  become_user: "{{ oracle_user }}"
  loop_control:
    loop_var: odb
    label: >-
      service: {{ _db_service_name }}:{{ _listener_port_cdb }}
      role: {{ odb.1.name | default('') }}
      grants: {{ odb.1.grants | default('') }}
      state: {{ odb.1.state | default('') }}
  tags:
    - users
    - grants

- name: Manage role grants (pdb)
  opitzconsulting.ansible_oracle.oracle_grants:
    role: "{{ opdb.1.name }}"
    state: "{{ opdb.1.state }}"
    grants: "{{ opdb.1.grants | default(omit) }}"
    grants_mode: "{{ opdb.1.grants_mode | default(omit)  }}"
    object_privs: "{{ opdb.1.object_privs | default(omit) }}"
    directory_privs: "{{ opdb.1.directory_privs | default(omit) }}"
    hostname: "{{ oracle_hostname }}"
    port: "{{ _listener_port_pdb }}"
    service_name: "{{ _db_service_pdb }}"
    user: "{{ db_user }}"
    password: "{{ _db_password_pdb }}"
    mode: "{{ db_mode }}"
  with_subelements:
    - "{{ oracle_pdbs }}"
    - roles
    - flags:
      skip_missing: true
  environment: "{{ _oracle_env_pdb }}"
  when:
    - oracle_pdbs is defined
    - opdb.0 is defined
    - opdb.0.state == 'present'
    - (opdb.1.grants is defined or opdb.1.object_privs is defined)
    - >-
      oracle_databases | selectattr('oracle_db_name', 'equalto', opdb.0.cdb)
      | map(attribute='state') | list | first == 'present'
  run_once: "{{ _oraswgi_meta_configure_cluster }}"
  become: true
  become_user: "{{ oracle_user }}"
  loop_control:
    loop_var: opdb
    label: >-
      port: {{ _listener_port_pdb }},
      pdb: {{ opdb.0.pdb_name }},
      role: {{ opdb.1.name | default('none') }},
      grants: {{ opdb.1.grants | default(omit) }},
      state: {{ opdb.1.state }}
  tags:
    - users
    - grants2

# @todo bug: Manage schema grants (cdb) with state: abesent not working
- name: Manage schema grants (cdb)
  opitzconsulting.ansible_oracle.oracle_grants:
    schema: "{{ odb.1.schema }}"
    state: "{{ odb.1.state | default('present') }}"
    grants: "{{ odb.1.grants | default(omit) }}"
    grants_mode: "{{ odb.1.grants_mode | default(omit)  }}"
    object_privs: "{{ odb.1.object_privs | default(omit) }}"
    directory_privs: "{{ odb.1.directory_privs | default(omit) }}"
    hostname: "{{ oracle_hostname }}"
    port: "{{ _listener_port_cdb }}"
    service_name: "{{ _db_service_name }}"
    user: "{{ db_user }}"
    password: "{{ _db_password_cdb }}"
    container: "{{ odb.1.container | default(omit) }}"
    mode: "{{ db_mode }}"
  with_subelements:
    - "{{ oracle_databases }}"
    - users
    - flags:
      skip_missing: true
  environment: "{{ _oracle_env }}"
  when:
    - oracle_databases is defined
    - odb.0.state == 'present'
    - (odb.1.grants is defined or odb.1.object_privs is defined)
  run_once: "{{ _oraswgi_meta_configure_cluster }}"
  become: true
  become_user: "{{ oracle_user }}"
  loop_control:
    loop_var: odb
    label: >-
      service: {{ _db_service_name }}:{{ _listener_port_cdb }}
      schema: {{ odb.1.schema | default('') }}
      grants: {{ odb.1.grants | default('') }}
      state: {{ odb.1.state | default('') }}"
  tags:
    - users
    - grants

- name: Manage schema grants (pdb)
  opitzconsulting.ansible_oracle.oracle_grants:
    schema: "{{ opdb.1.schema }}"
    state: "{{ opdb.1.state }}"
    grants: "{{ opdb.1.grants | default(omit) }}"
    grants_mode: "{{ opdb.1.grants_mode | default(omit) }}"
    object_privs: "{{ opdb.1.object_privs | default(omit) }}"
    directory_privs: "{{ opdb.1.directory_privs | default(omit) }}"
    hostname: "{{ oracle_hostname }}"
    port: "{{ _listener_port_pdb }}"
    service_name: "{{ _db_service_pdb }}"
    user: "{{ db_user }}"
    password: "{{ _db_password_pdb }}"
    mode: "{{ db_mode }}"
  with_subelements:
    - "{{ oracle_pdbs }}"
    - users
    - flags:
      skip_missing: true
  environment: "{{ _oracle_env_pdb }}"
  when:
    - oracle_pdbs is defined
    - opdb.0 is defined
    - opdb.0.state == 'present'
    - (opdb.1.grants is defined or opdb.1.object_privs is defined)
    - >-
      oracle_databases | selectattr('oracle_db_name', 'equalto', opdb.0.cdb)
      | map(attribute='state') | list | first == 'present'
  run_once: "{{ _oraswgi_meta_configure_cluster }}"
  become: true
  become_user: "{{ oracle_user }}"
  loop_control:
    loop_var: opdb
    label: >-
      port: {{ _listener_port_pdb }},
      pdb: {{ opdb.0.pdb_name }},
      schema: {{ opdb.1.schema | default('none') }},
      grants: {{ opdb.1.grants | default(omit) }},
      state: {{ opdb.1.state }}
  tags:
    - users
    - grants4
