---
- name: manage pdb(s)
  tags: pdb
  block:

    - name: assert
      ansible.builtin.import_role:
        name: orasw_meta
        tasks_from: assert_oracle_databases.yml
        allow_duplicates: false

    - name: manage pdb(s)
      opitzconsulting.ansible_oracle.oracle_pdb:
        name: "{{ odb[1].pdb_name }}"
        sourcedb: "{{ odb[1].cdb }}"
        datafile_dest: "{{ odb[1].datafile_dest | default(omit) }}"
        save_state: "{{ odb[1].save_state | default(omit) }}"
        pdb_admin_username: "{{ pdbadmin_user | default(omit) }}"
        pdb_admin_password: "{{ pdbadmin_password | default(omit) }}"
        host: "{{ oracle_hostname }}"
        username: "{{ db_user | default('sys') }}"
        password: "{{ _db_password_cdb }}"
        mode: "{{ db_mode }}"
        service_name: "{{ odb[0].oracle_db_unique_name | default(odb[0].oracle_db_name) }}"
        port: "{{ listener_port_template }}"
        state: "{{ odb[1].state | default(omit) }}"
      environment: "{{ _oracle_env }}"
      with_nested:
        - "{{ oracle_databases }}"
        - "{{ oracle_pdbs }}"
      become: true
      become_user: "{{ oracle_user }}"
      loop_control:
        label: >-
          CDB: {{ odb[1].cdb | default('') }},
          PDB: {{ odb[1].pdb_name | default('') }},
          state: {{ odb[1].state | default('') }}
          db_state: {{ oracledb_facts[_oracle_db_unique_name]['state'] | default('') }}
        loop_var: odb
      when:
        - _orasw_meta_primary_node | bool
        - oracle_databases is defined
        - odb[0].oracle_db_name
        - oracle_pdbs is defined
        - odb[1].cdb
        - odb[0].state|upper == 'PRESENT'
        - odb[1].cdb == odb[0].oracle_db_name
        - odb[0].is_container
        - oracledb_facts[_oracle_db_unique_name]['state'] | default('') == 'present'
