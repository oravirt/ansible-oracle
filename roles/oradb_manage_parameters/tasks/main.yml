---
- name: Manage parameters (db/cdb)
  opitzconsulting.ansible_oracle.oracle_parameter:
    hostname: "{{ ansible_hostname }}"
    service_name: "{{ db_service_name }}"
    port: "{{ listener_port_template }}"
    user: "{{ db_user }}"
    password: "{{ db_password_cdb }}"
    mode: "{{ db_mode }}"
    name: "{{ item.1.name }}"
    value: "{{ item.1.value }}"
    state: "{{ item.1.state }}"
    scope: "{{ item.1.scope | default ('both') }}"
  environment: "{{ oracle_env }}"
  run_once: "{{ configure_cluster }}"
  with_subelements:
    - "{{ oracle_databases }}"
    - init_parameters
    - flags:
      skip_missing: true
  when: oracle_databases is defined and item.0.state|lower == 'present' and item.1 is defined
  become_user: "{{ oracle_user }}"
  loop_control:
    label: "port: {{ listener_port_template }} service: {{ db_service_name }} name: {{ item.1.name }} value: {{ item.1.value }} scope: {{ item.1.scope | default ('both') }} state:{{ item.1.state }}"
    # noqa yaml
  register: param_change
  tags: initparams

- name: Manage parameters (pdb)
  opitzconsulting.ansible_oracle.oracle_parameter:
    hostname: "{{ ansible_hostname }}"
    service_name: "{{ item.0.pdb_name }}"
    port: "{{ listener_port_template }}"
    user: "{{ db_user }}"
    password: "{{ db_password_pdb }}"
    mode: "{{ db_mode }}"
    name: "{{ item.1.name }}"
    value: "{{ item.1.value }}"
    state: "{{ item.1.state }}"
    scope: "{{ item.1.scope | default ('both') }}"
  environment: "{{ oracle_env }}"
  run_once: "{{ configure_cluster }}"
  with_subelements:
    - "{{ oracle_pdbs }}"
    - init_parameters
    - flags:
      skip_missing: true
  when: oracle_pdbs is defined and item.0.state|lower == 'present' and item.1 is defined
  become_user: "{{ oracle_user }}"
  loop_control:
    label: "port: {{ listener_port_template }} service: {{ item.0.pdb_name }} name: {{ item.1.name }} value: {{ item.1.value }} scope: {{ item.1.scope | default ('both') }} state:{{ item.1.state }}"
    # noqa yaml
  register: param_change
  tags: initparams
