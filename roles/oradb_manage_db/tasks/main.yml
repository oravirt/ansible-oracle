---
# tasks file for manage_db
- ansible.builtin.include_tasks: assert.yml  # noqa name[missing]
  tags:
    always

- ansible.builtin.include_tasks: tnsnames.yml  # noqa name[missing]
  with_items:
    - "{{ tnsnames_installed }}"
  loop_control:
    loop_var: tnsinst
  when: tnsnames_installed is defined
  tags: tnsnames2

- name: manage_db | set fact for Listener
  ansible.builtin.set_fact:
    create_listener: "{{ create_listener }}"
  with_items: "{{ oracle_databases }}"
  loop_control:
    loop_var: dbh
    label: "create_listener {{ create_listener | default('') }}  oracle_home {{ dbh.home | default('') }}"
  tags: set_fact

- ansible.builtin.include_tasks: sqlnet.yml  # noqa name[missing]
  with_items:
    - "{{ sqlnet_installed }}"
  loop_control:
    loop_var: sqlnetinst
  when: sqlnet_installed is defined
  tags: sqlnet2

- ansible.builtin.include_tasks: listener_details.yml  # noqa name[missing]
  with_items:
    - "{{ listener_installed }}"
  loop_control:
    loop_var: lsnrinst
  when: listener_installed is defined
  tags: listener2

- ansible.builtin.include_tasks: listener.yml  # noqa name[missing]
  with_items:
    - "{{ oracle_databases }}"
  loop_control:
    loop_var: dbh
  when: create_listener and oracle_databases is defined and listener_installed is not defined
  tags: listener

- name: manage_db | Add change-pdb script
  ansible.builtin.template:
    src: pdb.sql.j2
    dest: "{{ oracle_user_home }}/.Scripts/chpdb.sql"
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
    mode: 0644
  tags: sql_script

- ansible.builtin.include_tasks: manage-db.yml  # noqa name[missing]
  with_items:
    - "{{ oracle_databases }}"
  loop_control:
    loop_var: dbh
    label: " oracle_db_name={{ dbh.oracle_db_name | default('') }}"
  when: oracle_databases is defined
  tags: create_db,dbca,customdbcatemplate,dotprofile_db

- name: manage_db | Check if database is running
  ansible.builtin.shell: ps -ef |grep pmon |grep -v grep
  tags:
    - psout
  register: psout
  changed_when: false
  failed_when: false
  ignore_errors: true

- ansible.builtin.debug:
    var: psout.stdout_lines  # noqa name[missing]
  changed_when: false
  failed_when: false
  when: psout is defined
  tags:
    - psout
