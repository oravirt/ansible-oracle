---
# @var oracle_dbca_rsp:description: >
# This is an internal variable in `ansible-oracle`.
#
# _IMPORTANT_
#
# Do not set this variable in inventory, set_fact ...!
# @end
oracle_dbca_rsp: "dbca_{{ dbh.oracle_db_name }}.rsp"        # Name of responsefile used by dbca. One per database

# @var oracle_netca_rsp:description: >
# This is an internal variable in `ansible-oracle`.
#
# _IMPORTANT_
#
# Do not set this variable in inventory, set_fact ...!
# @end
oracle_netca_rsp: "netca_{{ dbh.home }}_{{ listener_name_template }}.rsp"

listener_protocols_template: "{% if dbh.listener_protocols is defined %}{{ dbh.listener_protocols }}{% else %}{{ listener_protocols }}{% endif %}"

oracle_env_dbca:
  ORACLE_HOME: "{{ oracle_home_db }}"
  LD_LIBRARY_PATH: "{{ oracle_home_db }}/lib"

oracle_rsp_stage: "{{ oracle_stage }}/rsp"

datafile_dest: "{% if dbh.storage_type | upper == 'FS' %}{{ oracle_dbf_dir_fs }}\
                {%- elif dbh.storage_type | upper == 'ASM' %}{{ oracle_dbf_dir_asm }}\
                {%- endif %}"

recoveryfile_dest: "{% if dbh.storage_type | upper == 'FS' %}{{ oracle_reco_dir_fs }}\
                    {%- elif dbh.storage_type | upper == 'ASM' %}{{ oracle_reco_dir_asm }}\
                    {%- endif %}"

oracle_gi_cluster_type: STANDARD
hostgroup_hub: "{{ hostgroup }}-hub"
create_listener: "{%- if oracle_install_option_gi is defined -%}\
                      False\
                  {%- elif oracle_install_option_gi is undefined -%}\
                        {%- if dbh is defined and dbh.listener_name is defined -%}\
                            True\
                        {%- else -%}\
                            False\
                        {%- endif -%}\
                    {%- endif -%}"

listener_name: LISTENER
listener_port: 1521

listener_home: "{%- if lsnrinst is defined -%}\
                  {%- if db_homes_config[lsnrinst.home]['oracle_home'] is defined -%}{{ db_homes_config[lsnrinst.home]['oracle_home'] }}\
                  {%- else -%}{{ oracle_base }}/{{ db_homes_config[lsnrinst.home]['version'] }}/{{ db_homes_config[lsnrinst.home]['home'] }}\
                  {%- endif -%}\
                {%- elif tnsinst is defined -%}\
                  {%- if db_homes_config[tnsinst.home]['oracle_home'] is defined -%}{{ db_homes_config[tnsinst.home]['oracle_home'] }}\
                  {%- else -%}{{ oracle_base }}/{{ db_homes_config[tnsinst.home]['version'] }}/{{ db_homes_config[tnsinst.home]['home'] }}\
                  {%- endif -%}\
                {%- elif sqlnetinst is defined -%}\
                  {%- if db_homes_config[sqlnetinst.home]['oracle_home'] is defined -%}{{ db_homes_config[sqlnetinst.home]['oracle_home'] }}\
                  {%- else -%}{{ oracle_base }}/{{ db_homes_config[sqlnetinst.home]['version'] }}/{{ db_homes_config[sqlnetinst.home]['home'] }}\
                  {%- endif -%}\
                {%- endif -%}"

listener_home_config: "{%- if lsnrinst is defined -%}\
                  {%- if db_homes_config[lsnrinst.home]['readonly_home'] | default(false) -%}{{ oracle_base }}/homes/{{ db_homes_config[lsnrinst.home]['oracle_home_name'] }}\
                  {%- else -%}{{ listener_home }}\
                  {%- endif -%}\
                {%- elif tnsinst is defined -%}\
                  {%- if db_homes_config[tnsinst.home]['readonly_home'] | default(false) -%}{{ oracle_base }}/homes/{{ db_homes_config[tnsinst.home]['oracle_home_name'] }}\
                  {%- else -%}{{ listener_home }}\
                  {%- endif -%}\
                {%- elif sqlnetinst is defined -%}\
                  {%- if db_homes_config[sqlnetinst.home]['readonly_home'] | default(false) -%}{{ oracle_base }}/homes/{{ db_homes_config[sqlnetinst.home]['oracle_home_name'] }}\
                  {%- else -%}{{ listener_home }}\
                  {%- endif -%}\
                {%- endif -%}"

oracle_env_lsnrctl:
  ORACLE_BASE: "{{ oracle_base }}"
  ORACLE_HOME: "{{ listener_home }}"
  LD_LIBRARY_PATH: "{{ listener_home }}/lib"
  PATH: "{{ listener_home }}/bin:$PATH:/usr/local/bin:/bin:/sbin:/usr/bin:/usr/sbin"

## START-OF-PASSWORDS
# GI
default_gipass: "{% if oracle_password is defined %}{{ oracle_password }}\
                 {%- else %}Oracle123{% endif %}"  # The check for the old passwords are there for backwards compatibility and only temporary, will be removed
sysasmpassword: "{% if oracle_password is defined %}{{ oracle_password }}\
                 {%- else %}Oracle123{% endif %}"  # The check for the old passwords are there for backwards compatibility and only temporary, will be removed
asmmonitorpassword: "{% if oracle_password is defined %}{{ oracle_password }}\
                     {%- else %}Oracle123\
                     {%- endif %}"  # The check for the old passwords are there for backwards compatibility and only temporary, will be removed

dbca_templatename: General_Purpose.dbc
dbca_sys_pass: "{% if dbpasswords[dbh.oracle_db_name] is defined %}\
                  {%- if dbpasswords[dbh.oracle_db_name]['sys'] is defined %}{{ dbpasswords[dbh.oracle_db_name]['sys'] }}\
                  {%- else %}{{ default_dbpass }}\
                  {%- endif %}\
                {%- else %}{{ default_dbpass }}\
                {%- endif %}"
dbca_system_pass: "{% if dbpasswords[dbh.oracle_db_name] is defined %}\
                     {%- if dbpasswords[dbh.oracle_db_name]['system'] is defined %}{{ dbpasswords[dbh.oracle_db_name]['system'] }}\
                     {%- else %}{{ default_dbpass }}\
                     {%- endif %}\
                    {%- else %}{{ default_dbpass }}\
                    {%- endif %}"

init_params_list: "{%- if dbh.init_parameters is defined -%}\
                      {%- for p in dbh.init_parameters -%}\
                        {%- if p.dbca | default(True) -%}\
                            {{ p.name }}={{ p.value }}{%- if not loop.last -%},{%- endif -%}\
                        {%- endif -%}\
                      {%- endfor -%}\
                    {%- endif -%}"
